version: "3.9"

services:
  db:
    image: postgres:14.4-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init_db.sql
  ingestor:
    image: metlo/enterprise-backend:${DOCKER_IMAGE_TAG:-latest}
    command: yarn start-collector
    container_name: metlo-enterprise-ingestor
    depends_on:
      - db
      - cache
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      - SINGLE_TENANT=true
      - LICENSE_KEY=${LICENSE_KEY}
      - DB_URL=postgres://postgres:postgres@db:5432/metlo_api_security
      - REDIS_URL=redis://:${REDIS_PASSWORD}@cache:6379
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - NODE_OPTIONS=--openssl-legacy-provider
      - RUN_MIGRATION=true
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./metlo-config.yaml:/usr/src/app/backend/metlo-config.yaml
  cache:
    image: redis:7.0.4
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - cache:/data
  backend:
    image: metlo/enterprise-backend:${DOCKER_IMAGE_TAG:-latest}
    container_name: metlo-enterprise-backend
    restart: unless-stopped
    depends_on:      
      - db
      - cache
      - ingestor
    ports:
      - 8080:8080
    environment:
      - SINGLE_TENANT=true
      - ALLOW_LOCAL_AUTH=true
      - LICENSE_KEY=${LICENSE_KEY}
      - DB_URL=postgres://postgres:postgres@db:5432/metlo_api_security
      - REDIS_URL=redis://:${REDIS_PASSWORD}@cache:6379
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - EXPRESS_SECRET=${EXPRESS_SECRET}
      - SESSION_SECRET=${EXPRESS_SECRET}
      - JWT_KEY=${JWT_KEY}
      - SECURE_AUTH_COOKIE=${SECURE_AUTH_COOKIE:-true}
      - SANDBOX_MODE=false
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - SMTP_SERVER=${SMTP_SERVER:-}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - EMAIL_SENDER=${EMAIL_SENDER:-}
      - SELF_LINK=${SELF_LINK:-}
  jobs:
    image: metlo/enterprise-jobrunner:${DOCKER_IMAGE_TAG:-latest}
    container_name: metlo-enterprise-jobs
    depends_on:
      - ingestor
    restart: unless-stopped
    environment:
      - SINGLE_TENANT=true
      - LICENSE_KEY=${LICENSE_KEY}
      - DB_URL=postgres://postgres:postgres@db:5432/metlo_api_security
      - REDIS_URL=redis://:${REDIS_PASSWORD}@cache:6379
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - DISABLE_LOGGING_STATS=${DISABLE_LOGGING_STATS:-false}
      - RETENTION_HOURS=${RETENTION_HOURS:-1}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - SMTP_SERVER=${SMTP_SERVER:-}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - EMAIL_SENDER=${EMAIL_SENDER:-}
      - SELF_LINK=${SELF_LINK:-}
  analyzer:
    image: metlo/enterprise-jobrunner:${DOCKER_IMAGE_TAG:-latest}
    container_name: metlo-enterprise-analyzer
    command: yarn start-analyzer
    depends_on:
      - ingestor
    restart: unless-stopped
    environment:
      - SINGLE_TENANT=true
      - LICENSE_KEY=${LICENSE_KEY}
      - DB_URL=postgres://postgres:postgres@db:5432/metlo_api_security
      - REDIS_URL=redis://:${REDIS_PASSWORD}@cache:6379
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - NUM_WORKERS=${NUM_WORKERS}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - SMTP_SERVER=${SMTP_SERVER:-}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - EMAIL_SENDER=${EMAIL_SENDER:-}
      - SELF_LINK=${SELF_LINK:-}
  frontend:
    image: metlo/enterprise-frontend:${DOCKER_IMAGE_TAG:-latest}
    container_name: metlo-enterprise-frontend
    restart: unless-stopped
    environment:
      - BACKEND_URL=http://backend:8080
    ports:
      - 8000:3000

volumes:
  db:
    driver: local
  cache:
    driver: local
